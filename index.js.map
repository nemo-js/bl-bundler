{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["import fs = require(\"fs\");\r\nimport path = require(\"path\");\r\nimport compressor = require(\"node-minify\");\r\n\r\nexport module BlBundler {\r\n\r\n    export class Bundle {\r\n        private files: { [type: string]: string[] } = {};\r\n        public name: string;\r\n        public urlPrefix: string;\r\n\r\n        constructor(name: string, urlPrefix: string) {\r\n            this.name = name;\r\n            this.urlPrefix = urlPrefix;\r\n        }\r\n\r\n        addFile(type: string, path: string) {\r\n            if (this.files[type] == null) {\r\n                this.files[type] = [];\r\n            }\r\n\r\n            this.files[type].push(path);\r\n        }\r\n\r\n        public addJs(relativePath: string): Bundle {\r\n            this.addFile(\"js\", relativePath);\r\n            return this;\r\n        }\r\n\r\n        public addCss(relativePath: string): Bundle {\r\n            this.addFile(\"css\", relativePath);\r\n            return this;\r\n        }\r\n\r\n        compile(rootUrl: string, type: string) {\r\n            if (!fs.existsSync(path.join(rootUrl, \"_bundled\"))) {\r\n                fs.mkdirSync(path.join(rootUrl, \"_bundled\"));\r\n            }\r\n            if (!fs.existsSync(path.join(rootUrl, \"_bundled\", type))) {\r\n                fs.mkdirSync(path.join(rootUrl, \"_bundled\", type));\r\n            }\r\n\r\n            const files = this.files[type];\r\n            if (files == null) {\r\n                return \"\";\r\n            }\r\n\r\n            var totalCode = \"\";\r\n            for (let i = 0; i < files.length; i++) {\r\n                const fullPath = path.join(rootUrl, files[i]);\r\n                totalCode += \"\\n/*bundled file ->\" + files[i] + \"*/\\n\";\r\n                totalCode += fs.readFileSync(fullPath);\r\n            }\r\n\r\n            var fullPath = path.join(rootUrl, this.getPathForType(type));\r\n            fs.writeFileSync(fullPath, totalCode);\r\n\r\n            compressor.minify({\r\n                compressor: 'uglifyjs',\r\n                input: fullPath,\r\n                output: fullPath\r\n            }).then(() => {\r\n            });\r\n        }\r\n\r\n        render(version: string, type: string, asBundle: boolean = true): string {\r\n            if (asBundle === true) {\r\n                return this.getHtmlInclude(version, type, this.getPathForType(type));\r\n            }\r\n\r\n            var allIncludes = \"\";\r\n            const files = this.files[type];\r\n            for (let i = 0; i < files.length; i++) {\r\n                allIncludes += this.getHtmlInclude(version, type, files[i]);\r\n            }\r\n            return allIncludes;\r\n        }\r\n\r\n        private getHtmlInclude(version: string, type: string, relPath: string) {\r\n            if (this.urlPrefix != null && this.urlPrefix != \"\") {\r\n                relPath = this.urlPrefix + relPath;\r\n            }\r\n\r\n            if (version == null || version == \"\") {\r\n                relPath += \"?_v=\" + version;\r\n            }\r\n        \r\n            switch (type) {\r\n                case \"js\":\r\n                    return `<script src=\"${relPath}\"></script>`;\r\n                case \"css\":\r\n                    return `<link type=\"text/css\" rel=\"stylesheet\" href=\"${relPath}\">`;\r\n            }\r\n        }\r\n        \r\n        private getPathForType(type: string) {\r\n            return `/_bundled/${type}/${this.name}_bundle.${type}`;\r\n        }\r\n    }\r\n\r\n    export interface IBundlerOptions {\r\n        rootPath: string;\r\n        minify?: boolean;\r\n        enabled?: boolean;\r\n        urlPrefix?: string;\r\n        version?: string;\r\n    }\r\n\r\n    export class Bundler {\r\n        private options: IBundlerOptions;\r\n        private groups: { [name: string]: Bundle } = {};\r\n        private compiledBundles: string[] = [];\r\n\r\n        constructor(options: IBundlerOptions) {\r\n            this.options = options || { rootPath: \"\" };\r\n            if (this.options.minify == null) {\r\n                this.options.minify = true;\r\n            }\r\n            if (this.options.enabled == null) {\r\n                this.options.enabled = true;\r\n            }\r\n            if (this.options.rootPath == null) {\r\n                this.options.rootPath = \"\";\r\n            }\r\n        }\r\n\r\n        public bundle(bundleName: string) {\r\n            if (this.groups[bundleName] == null) {\r\n                this.groups[bundleName] = new Bundle(bundleName, this.options.urlPrefix);\r\n            }\r\n\r\n            return this.groups[bundleName];\r\n        }\r\n\r\n        private render(type: string, groupName: string): string {\r\n            const group = this.groups[groupName];\r\n            if (group == null) {\r\n                throw new Error(`Bundle group '${groupName}' does not exist`);\r\n            }\r\n\r\n            if (this.options.enabled === false) {\r\n                return group.render(this.options.version, type, false);\r\n            }\r\n\r\n            const alreadyCompiled = this.compiledBundles.indexOf(groupName + type) !== -1;\r\n            if (!alreadyCompiled || this.options.minify === true) {\r\n                group.compile(this.options.rootPath, type);\r\n                if (!alreadyCompiled) {\r\n                    this.compiledBundles.push(groupName + type);\r\n                }\r\n            }\r\n\r\n            return group.render(this.options.version, type);\r\n        }\r\n\r\n        public renderJs(groupName: string): string {\r\n            return this.render('js', groupName);\r\n        }\r\n\r\n        public renderCss(groupName: string): string {\r\n            return this.render('css', groupName);\r\n        }\r\n    }\r\n\r\n    var bundler: Bundler = null;\r\n\r\n    export var init = function (options: IBundlerOptions): Bundler {\r\n        if (bundler == null) {\r\n            bundler = new Bundler(options);\r\n        }\r\n        \r\n        return bundler;\r\n    }\r\n\r\n    export var installOnExpress = function (app: any) {\r\n        app.use(function (req: any, res: any, next: any) {\r\n            res.locals.renderJs = (groupName: string) => {\r\n                return bundler.renderJs(groupName);\r\n            };\r\n            res.locals.renderCss = (groupName: string) => {\r\n                return bundler.renderCss(groupName);\r\n            }\r\n            next();\r\n        });\r\n    }\r\n}"]}